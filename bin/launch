#!/usr/bin/env ruby
#
# Launch a Rackspace server via API using image_id
#
# Syntax: launch --image-id X --rightlink X.X.X
#
# NOTE: you must set RACKSPACE_ACCOUNT and RACKSPACE_API_TOKEN in your environment.
#
# cary@rightscale.com
#
require "rubygems"
require "right_rackspace"
require "pp"
require "trollop"

opts = Trollop::options do
  banner <<-EOS
  EOS

  opt :hostname, "Server hostname", :type => String, :default => "localhost"
  opt :image_id, "Image ID", :type => Integer, :required => true
  opt :flavor_id, "Flavor ID (Instance size)", :type => Integer, :default => 1
  opt :no_checkout, "Don't checkout RightLink repo"
  opt :no_configure, "Don't automatically run configure script"
  opt :no_auto, "Don't automatically upload and/or build when server is ready"
  opt :rightlink, "RightLink version", :type => String
end
Trollop::die :rightlink, "must be specified" unless opts[:rightlink] || (opts[:no_checkout] && opts[:no_configure])

name = opts[:hostname]
image_id = opts[:image_id]
flavor_id = opts[:flavor_id]

# flavor_id.  This is what rackspace calls their instace sizes.
# NOTE: if you choose a larger flavor, then new VMs 
# must use same size or larger. Smaller sizes will fail.
# So it is recommended that you leave it alone if possible.

account = ENV["RACKSPACE_ACCOUNT"]
token = ENV["RACKSPACE_API_TOKEN"]
unless account && token
  puts "ERROR: you must define RACKSPACE_ACCOUNT and RACKSPACE_API_TOKEN in your env." 
  exit 1
end

server = {
  :name => name,
  :image_id => image_id.to_i,  
  :flavor_id => flavor_id.to_i      
}

# monkey patch: right_rackspace currently depends on rails .blank? method.
class Object
  def blank?
    respond_to?(:empty?) ? empty? : !self
  end
end

# Create new server using given image_id
rackspace_api = ::Rightscale::Rackspace::Interface::new(account, token ,:verbose_errors => true)
data = rackspace_api.create_server(:name => server[:name], :image_id => server[:image_id], :flavor_id => server[:flavor_id] )

# Display info - like public IP addr and passwd
pp data

hostname_path = File.join(File.dirname(__FILE__), "..", "rax_hostname")
File.open(hostname_path, "w") do |file|
  file.write data["server"]["addresses"]["public"].first
end

password_path = File.join(File.dirname(__FILE__), "..", "rax_password")
File.open(password_path, "w") do |file|
  file.write data["server"]["adminPass"]
end

unless opts[:no_auto]
  sleep 180
  begin
    state = rackspace_api.get_server(data["server"]["id"])["server"]["status"]
    puts "Server status: #{state}"
    sleep 30 unless state == "ACTIVE"
  end while state != "ACTIVE"

  command = "bin/upload"
  flags = ""
  flags += "--rightlink #{opts[:rightlink]} " if opts[:rightlink]
  flags += "--no-checkout " if opts[:no_checkout]
  flags += "--no-configure " if opts[:no_configure] 
  puts "Server build complete.  Running command: #{command} with flags: #{flags}"
  puts `#{command} #{flags}`
end
